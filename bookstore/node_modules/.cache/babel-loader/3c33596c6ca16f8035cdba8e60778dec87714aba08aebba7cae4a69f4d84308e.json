{"ast":null,"code":"import { PREFIX } from \"./config\";\nexport async function getCart(userId) {\n  return fetch(`${PREFIX}/cart`, {\n    method: 'POST',\n    // 使用 POST 方法\n    credentials: 'include',\n    // 确保请求中包含 Cookie\n    headers: {\n      'Content-Type': 'application/json' // 指定内容类型为 JSON\n    },\n    body: userId // 将数据转换为 JSON 字符串\n  }).then(response => response.json()).catch(error => console.error('Error fetching cart:', error));\n}\nexport async function addBookToCart(userId, bookId) {\n  return fetch(`${PREFIX}/cart/add`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userId,\n      bookId\n    })\n  }).then(response => response.text()).catch(error => console.error('Error adding book to cart:', error));\n}\nexport async function updateBookQuantity(id, quantity) {\n  return fetch(`${PREFIX}/cart/update`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id,\n      quantity\n    })\n  }).then(response => response.text()).catch(error => console.error('Error updating book quantity:', error));\n}\nexport async function deleteBookFromCart(id) {\n  return fetch(`${PREFIX}/cart/delete`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: id\n  }).then(response => response.text()).catch(error => console.error('Error deleting book from cart:', error));\n}","map":{"version":3,"names":["PREFIX","getCart","userId","fetch","method","credentials","headers","body","then","response","json","catch","error","console","addBookToCart","bookId","JSON","stringify","text","updateBookQuantity","id","quantity","deleteBookFromCart"],"sources":["/Users/dingmuyun/Desktop/bookstore 前端/bookstore/src/service/cart.js"],"sourcesContent":["import {PREFIX} from \"./config\";\n\nexport async function getCart(userId) {\n    return fetch(`${PREFIX}/cart`, {\n        method: 'POST', // 使用 POST 方法\n        credentials: 'include', // 确保请求中包含 Cookie\n        headers: {\n            'Content-Type': 'application/json', // 指定内容类型为 JSON\n        },\n        body:userId // 将数据转换为 JSON 字符串\n    })\n        .then(response => response.json())\n        .catch(error => console.error('Error fetching cart:', error));\n}\n\nexport async function addBookToCart(userId,bookId){\n    return fetch(`${PREFIX}/cart/add`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ userId, bookId})\n        })\n        .then(response => response.text())\n        .catch(error => console.error('Error adding book to cart:', error));\n}\n\nexport async function updateBookQuantity(id,quantity){\n    return fetch(`${PREFIX}/cart/update`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ id, quantity })\n    })\n        .then(response => response.text())\n        .catch(error => console.error('Error updating book quantity:', error));\n}\n\nexport async function deleteBookFromCart(id){\n    return fetch(`${PREFIX}/cart/delete`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: id\n    })\n        .then(response => response.text())\n        .catch(error => console.error('Error deleting book from cart:', error));\n}"],"mappings":"AAAA,SAAQA,MAAM,QAAO,UAAU;AAE/B,OAAO,eAAeC,OAAOA,CAACC,MAAM,EAAE;EAClC,OAAOC,KAAK,CAAE,GAAEH,MAAO,OAAM,EAAE;IAC3BI,MAAM,EAAE,MAAM;IAAE;IAChBC,WAAW,EAAE,SAAS;IAAE;IACxBC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB,CAAE;IACxC,CAAC;IACDC,IAAI,EAACL,MAAM,CAAC;EAChB,CAAC,CAAC,CACGM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;AACrE;AAEA,OAAO,eAAeE,aAAaA,CAACZ,MAAM,EAACa,MAAM,EAAC;EAC9C,OAAOZ,KAAK,CAAE,GAAEH,MAAO,WAAU,EAAE;IAC/BI,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAES,IAAI,CAACC,SAAS,CAAC;MAAEf,MAAM;MAAEa;IAAM,CAAC;EACtC,CAAC,CAAC,CACDP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CACjCP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;AAC3E;AAEA,OAAO,eAAeO,kBAAkBA,CAACC,EAAE,EAACC,QAAQ,EAAC;EACjD,OAAOlB,KAAK,CAAE,GAAEH,MAAO,cAAa,EAAE;IAClCI,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAES,IAAI,CAACC,SAAS,CAAC;MAAEG,EAAE;MAAEC;IAAS,CAAC;EACzC,CAAC,CAAC,CACGb,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CACjCP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;AAC9E;AAEA,OAAO,eAAeU,kBAAkBA,CAACF,EAAE,EAAC;EACxC,OAAOjB,KAAK,CAAE,GAAEH,MAAO,cAAa,EAAE;IAClCI,MAAM,EAAE,MAAM;IACdE,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEa;EACV,CAAC,CAAC,CACGZ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CACjCP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;AAC/E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}